HealthAI/
│
├── backend/
│   ├── app/
│   │   ├── core/
│   │   │   ├── config.py          # Configurações gerais
│   │   │   └── security.py        # Autenticação JWT, OAuth2
│   │   │
│   │   ├── models/
│   │   │   ├── user.py            # Modelo base de usuário
│   │   │   ├── patient.py         # Modelo específico de paciente
│   │   │   └── professional.py    # Modelo de profissional de saúde
│   │   │
│   │   ├── schemas/               # Esquemas Pydantic
│   │   │   ├── users.py
│   │   │   └── diagnostics.py
│   │   │
│   │   ├── routes/
│   │   │   ├── auth.py            # Autenticação
│   │   │   ├── patients.py        # Endpoints pacientes
│   │   │   └── professionals.py   # Endpoints profissionais
│   │   │
│   │   ├── services/
│   │   │   ├── diagnostic_service.py  # Lógica de diagnóstico
│   │   │   └── report_service.py      # Geração de PDF
│   │   │
│   │   ├── db/                    # Configuração do banco de dados
│   │   │   ├── base.py            # Classe base
│   │   │   ├── session.py         # Sessão do banco
│   │   │   └── init_db.py         # População inicial
│   │   │
│   │   ├── ml_integration/        # Integração com ML
│   │   │   ├── model_loader.py    # Carregamento do modelo
│   │   │   └── preprocessor.py    # Pré-processamento de dados
│   │   │
│   │   └── main.py                # Ponto de entrada FastAPI
│   │
│   ├── tests/
│   │   ├── unit/
│   │   └── integration/
│   │
│   ├── requirements/
│   │   ├── base.txt               # Dependências principais
│   │   ├── dev.txt                # Dev dependencies
│   │   └── prod.txt               # Production dependencies
│   │
│   └── Dockerfile
│
├── ml_model/
│   ├── data/
│   │   ├── raw/                   # Dados brutos do Kaggle
│   │   ├── processed/             # Dados pré-processados
│   │   └── trained_models/        # Modelos serializados
│   │
│   ├── notebooks/                 # Jupyter notebooks de análise
│   ├── training_pipeline/
│   │   ├── data_processing.py
│   │   ├── feature_engineering.py
│   │   └── model_training.py
│   │
│   └── evaluation/                # Métricas e avaliações
│
├── frontend/
│   ├── public/                    # Assets estáticos
│   ├── src/
│   │   ├── components/            # Componentes React/Vue
│   │   ├── views/
│   │   │   ├── PatientView/       # Interface paciente
│   │   │   └── ProfessionalView/  # Dashboard
│   │   ├── services/              # Chamadas API
│   │   └── styles/                # CSS/SASS
│   │
│   └── Dockerfile
│
├── infrastructure/
│   ├── docker-compose.yml         # Orquestração de serviços
│   ├── nginx/                     # Configuração de proxy reverso
│   └── postgres/                  # Scripts SQL inicialização
│
├── docs/
│   ├── API_DOCS.md                # Swagger/OpenAPI
│   ├── ARCHITECTURE.md
│   └── ML_MODEL.md                # Documentação do modelo
│
├── scripts/
│   ├── deploy.sh                  # Scripts de deploy
│   └── data_loader.py             # Carga inicial de dados
│
├── .github/
│   └── workflows/                 # CI/CD pipelines
│       ├── main.yml
│       └── ml_training.yml
│
└── .env                           # Variáveis de ambiente